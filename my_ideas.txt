1. 首先我想看一下，从小区这个地理维度来求的均价，在过去一个月的时间里，挂牌的数量和交易的数量都是null的有多少？
 实现方法：数据：622685.csv 用R来做。
 代码运行结果：是0.意思就是说。所有的小区在过去的一个月里都有挂牌记录或者交易记录。
 #这个结论在excel表中通过对两列筛选同时也得到了验证。
 进一步思考：是不是当初这个表在创建的时候，就是只选择了两者之一存在的数据呢？
 
2. 小区地理维度的租赁类型：  apartment  simple_rent 
								5003       24510
								
	来源解释;
	case appid
            when '104' then 'simple_rent'  #104：Link房源系统（直营）
            else #else 指的是 appid = 500 :自如品牌公寓。
            'apartment'
    end as appid,
	新生成的 appid 就是 type变量。
	
3. 我现在遇到的一个很大的困难就是：（已解决）
  data0_avg = read.csv('622685.csv') #发现有很多数值型的变量都被数据框给识别成了 factor类型的变量
  具体来说：就是以下这些字段识别成了 factor类型的变量
  > convert_names2
 [1] "median_deal_price"    "mean_deal_price"      "min_deal_price"      
 [4] "max_deal_price"       "median_listing_price" "mean_listing_price"  
 [7] "min_listing_price"    "max_listing_price"    "trans_amount"        
[10] "listing_amount"

	str()；显示为因子型变量
 $ mean_deal_price     : Factor w/ 3136 levels "1000","10000",..: 2330 3136 1539 3136 3136 2523 2144 3136 1968 3136 ...
 $ min_deal_price      : Factor w/ 805 levels "1000","10000",..: 525 805 322 805 805 581 437 805 437 805 ...
 
 终于找到了合适的转化列类型的代码：
 data0_avg[,convert_names] = apply(data0_avg[,convert_names],2,as.numeric)
 
 4. 在数据框中新增了变量: mean_price_two
 
 > quantile(data0_avg_res$mean_price_two,probs = c(0.8,0.9,0.95,0.99) )
  80%   90%   95%   99% 
 7200 10000 14000 30000 
 对这个新增的变量进行描述性统计：发现它是一个右偏的变量。
 右偏变量的特点是:M>Me>Mo，即平均数大于中数，中数又大于众数
 正偏态分布的特征是曲线的最高点偏向X轴的左边，位于左半部分的曲线比正态分布的曲线更陡，而右半部分的曲线比较平缓，并且其尾线比起左半部分的曲线更长，无限延伸直到接近X轴。 
 尽管这个数据是右偏的，但暂时不要取对数将它正态化。因为均价是有实际含义的，取对数之后，就没有实际含义了。
 
 将变量 mean_price_two 由小到大排序;有10个情况均价<500; 我认为这种样本的价格是不符合实际情况的。属于假房源。
 sort(data0_avg_res$mean_price_two)
   [1]    7.0    7.0    8.0   80.0   80.0  300.0  400.0  400.0  425.0  450.0  500.0
  [12]  500.0  500.0  500.0  500.0  500.0  500.0  500.0  500.0  500.0  500.0  500.0
  [23]  500.0  500.0  500.0  510.0  550.0  550.0  550.0  550.0  550.0  550.0  600.0
  [34]  600.0  600.0  600.0  600.0  600.0  600.0  600.0  600.0  600.0  600.0  600.0
  [45]  600.0  600.0  600.0  600.0  600.0  600.0  600.0  600.0  600.0  600.0  600.0
  [56]  600.0  600.0  600.0  600.0  600.0  600.0  600.0  612.5  620.0  625.0  633.0
  [67]  638.0  650.0  650.0  650.0  650.0  650.0  650.0  650.0  650.0  650.0  650.0
  [78]  650.0  650.0  650.0  650.0  650.0  650.0  650.0  650.0  650.0  650.0  657.5
  [89]  662.5  675.0  680.0  691.5  700.0  700.0  700.0  700.0  700.0  700.0  700.0
 [100]  700.0  700.0  700.0  700.0 
 
 #又看了下交易价格的分布：最近一个月内新交易的交易价格没有低于400元的。
  sort(data0_avg_res$mean_deal_price) [1:100]
  [1]  400  400  500  500  500  500  550  550  575  600  600  600  600  600  600  600
 [17]  600  625  650  650  650  700  700  700  700  700  730  750  750  750  750  750
 [33]  750  780  790  800  800  800  800  800  800  800  800  800  800  800  800  825
 [49]  833  850  850  850  850  850  850  855  860  900  900  900  900  900  900  900
 [65]  940  950  950  950  970  975  988  990  990  990 1000 1000 1000 1000 1000 1000
 [81] 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000
 [97] 1000 1000 1025 1030
 
 #又看了下挂牌价格的分布：最近一个月内新挂牌的挂牌价格有低于400元的，有7,8元这种明显的异常值。
> sort(data0_avg_res$mean_listing_price)[1:100]
  [1]   7   7   8  80  80 300 400 450 450 500 500 500 500 500 500 500 500 500 500 500
 [21] 500 500 500 500 510 550 550 550 550 550 600 600 600 600 600 600 600 600 600 600
 [41] 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
 [61] 620 633 638 650 650 650 650 650 650 650 650 650 650 650 650 650 650 650 650 650
 [81] 650 650 650 650 650 675 680 700 700 700 700 700 700 700 700 700 700 700 700 700

 5. 地理维度小区层面的分组现在过于细致了：
 小区内部分组变量：
 frame_bedroom_num  '居室数量',
 rent_type   '出租类型'：1 整租 2 合租
 decoration  '装修情况',
 现在的主要任务就是：把因变量变成：房屋单位面积价格。
 写sql 试试看。
 
 6. sql查询出现的问题：
 为什么sign_time 要比 app_ctime还要早？见策略群聊天。
 
 7.下面这几个字段的区别？
app_ctime   ：作为上架时间。
数据创建时间
app_mtime
数据修改时间
ctime
创建时间
mtime
修改时间

8. 查询标号：625703（sql内容见sql_jk）
表结构概览如下：
hdic_city_id	hdic_district_id	hdic_bizcircle_id	hdic_resblock_id	frame_bedroom_num	rent_type	decoration	appid	price_trans	price_listing	price_trans_per_area	price_listing_per_area	sign_date	appc_date	diff_days	pt
110000	23008613	18335726	1.11103E+12	2	1	3	500	5690	5690	99.8245614	99.8245614	2018/1/19	2017/7/23	180	2.01803E+13
110000	23008615	18335749	1.11103E+12	2	1	3	500	4260	4260	62.64705882	62.64705882	2018/2/21	2017/7/24	212	2.01803E+13
110000	23008613	18335711	1.11103E+12	3	2	3	500	2590	2590	323.75	323.75	2018/3/6	2017/7/18	231	2.01803E+13
110000	23008625	18335699	1.11104E+12	2	1	3	500	5560	5560	62.47191011	62.47191011	2018/1/23	2017/7/20	187	2.01803E+13
110000	23008618	18335767	1.11103E+12	1	1	3	500	5790	5790	141.2195122	141.2195122	2018/3/8	2017/7/19	232	2.01803E+13
110000	23008618	18335768	1.11103E+12	2	2	3	500	3330	3330	370	370	2018/3/8	2017/7/12	239	2.01803E+13
110000	23008613	611100318	1.11103E+12	1	1	3	500	5390	5390	114.6808511	114.6808511	2018/3/12	2017/2/10	395	2.01803E+13
110000	23008613	18335730	1.11105E+12	2	1	3	500	6760	6760	109.0322581	109.0322581	2018/2/3	2017/7/21	197	2.01803E+13
110000	23008626	18335680	1.11103E+12	1	1	3	500	5290	5290	96.18181818	96.18181818	2018/1/31	2017/7/19	196	2.01803E+13
这个表存在的问题：diff_days这个字段都是一两百，显然不科学。
后续：用来做分组的单位面积价格均值描述。
用到的分组变量：hdic_resblock_id ； rent_type
聚合变量：mean(price_listing_per_area) ; mean(diff_days) ;n 中位数，标准差，变异系数。

 